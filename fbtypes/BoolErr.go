// automatically generated by the FlatBuffers compiler, do not modify

package fbtypes

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type BoolErr struct {
	_tab flatbuffers.Table
}

func GetRootAsBoolErr(buf []byte, offset flatbuffers.UOffsetT) *BoolErr {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &BoolErr{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *BoolErr) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *BoolErr) Err() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *BoolErr) Bool() byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetByte(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *BoolErr) MutateBool(n byte) bool {
	return rcv._tab.MutateByteSlot(6, n)
}

func BoolErrStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func BoolErrAddErr(builder *flatbuffers.Builder, Err flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(Err), 0)
}
func BoolErrAddBool(builder *flatbuffers.Builder, Bool byte) {
	builder.PrependByteSlot(1, Bool, 0)
}
func BoolErrEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
